

# Include the instance reader code
include("instance_reader.jl")

# Define the instance file to use as an example
instance_file = "Instances/L_5_0_60_1.txt"

# Read the instance data
instance = read_master_planning_instance(instance_file)

# Open a markdown file to write the output
open("instance_explanation_ko.md", "w") do f
    write(f, "# 인스턴스 데이터 설명: $(instance_file)\n\n")
    write(f, "이 문서는 `instance_reader.jl` 및 `README.md`에 따라 지정된 인스턴스 파일에서 로드된 데이터를 설명합니다.\n\n")

    write(f, "## 일반 정보\n\n")
    write(f, "- **베이 수 (`n_bays`):** $(instance.n_bays)\n")
    write(f, "  - *설명:* 선박의 베이(구획) 수.\n")
    write(f, "- **항구 수 (`n_ports`):** $(instance.n_ports)\n")
    write(f, "  - *설명:* 기항하는 항구의 수.\n")
    write(f, "- **위치/블록 수 (`n_locations`):** $(instance.n_locations)\n")
    write(f, "  - *설명:* 선박 내 컨테이너를 적재할 수 있는 위치/블록의 수.\n\n")

    write(f, "## 위치/블록 데이터\n\n")
    write(f, "- **갑판 위 위치 (`locations_over`):**\n")
    write(f, "  - *설명:* 모든 갑판 위 위치 ID 목록.\n")
    write(f, "  - *값:* `$(instance.locations_over)`\n\n")
    write(f, "- **갑판 아래 위치 (`locations_under`):**\n")
    write(f, "  - *설명:* 각 위치에 대해 해당하는 갑판 아래 위치를 나타냅니다. 값이 0이면 해당 위치 자체가 갑판 아래에 있음을 의미합니다.\n")
    write(f, "  - *값:* `$(instance.locations_under)`\n\n")
    write(f, "- **베이별 갑판 위 위치 (`locations_over_in_bay`):**\n")
    write(f, "  - *설명:* 각 베이에 대한 목록으로, 해당 베이 내의 갑판 위 위치를 포함합니다.\n")
    write(f, "  - *값:* `$(instance.locations_over_in_bay)`\n\n")
    write(f, "- **위치별 베이 (`location_bay`):**\n")
    write(f, "  - *설명:* 각 위치에 대해 해당 위치가 속한 베이를 나타냅니다.\n")
    write(f, "  - *값:* `$(instance.location_bay)`\n\n")
    write(f, "- **위치별 TEU 용량 (`location_TEU_capacity`):**\n")
    write(f, "  - *설명:* 각 위치의 TEU(20피트 컨테이너 환산 단위) 용량.\n")
    write(f, "  - *값:* `$(instance.location_TEU_capacity)`\n\n")
    write(f, "- **위치별 FEU 용량 (`location_FEU_capacity`):**\n")
    write(f, "  - *설명:* 각 위치의 FEU(40피트 컨테이너 환산 단위) 용량.\n")
    write(f, "  - *값:* `$(instance.location_FEU_capacity)`\n\n")
    write(f, "- **위치별 냉동 컨테이너 용량 (`location_reefer_capacity`):**\n")
    write(f, "  - *설명:* 각 위치의 냉동 컨테이너 연결구 수.\n")
    write(f, "  - *값:* `$(instance.location_reefer_capacity)`\n\n")
    write(f, "- **위치별 중량 용량 (`location_weight_capacity`):**\n")
    write(f, "  - *설명:* 각 위치의 중량 용량 (톤 단위).\n")
    write(f, "  - *값:* `$(instance.location_weight_capacity)`\n\n")
    write(f, "- **위치별 세로 중심 (`location_lcg`):**\n")
    write(f, "  - *설명:* 각 위치의 세로 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.location_lcg)`\n\n")
    write(f, "- **위치별 수직 중심 (`location_vcg`):**\n")
    write(f, "  - *설명:* 각 위치의 수직 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.location_vcg)`\n\n")
    write(f, "- **위치별 가로 중심 (`location_tcg`):**\n")
    write(f, "  - *설명:* 각 위치의 가로 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.location_tcg)`\n\n")

    write(f, "## 베이 데이터\n\n")
    write(f, "- **베이별 부력 (`bay_buoyancy`):**\n")
    write(f, "  - *설명:* 마지막 항구를 제외한 모든 기항지에서 각 베이의 부력 (톤 단위).\n")
    write(f, "  - *값:* `$(instance.bay_buoyancy)`\n\n")
    write(f, "- **인접 베이 (`bay_bins`):**\n")
    write(f, "  - *설명:* 인접한 베이들의 집합.\n")
    write(f, "  - *값:* `$(instance.bay_bins)`\n\n")
    write(f, "- **베이별 경하 중량 (`bay_lightship_weight`):**\n")
    write(f, "  - *설명:* 각 베이의 경하 중량(상수) (톤 단위).\n")
    write(f, "  - *값:* `$(instance.bay_lightship_weight)`\n\n")
    write(f, "- **베이별 세로 중심 (`bay_lcg`):**\n")
    write(f, "  - *설명:* 각 베이의 세로 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.bay_lcg)`\n\n")
    write(f, "- **베이별 수직 중심 (`bay_vcg`):**\n")
    write(f, "  - *설명:* 각 베이의 수직 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.bay_vcg)`\n\n")
    write(f, "- **베이별 가로 중심 (`bay_tcg`):**\n")
    write(f, "  - *설명:* 각 베이의 가로 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.bay_tcg)`\n\n")
    write(f, "- **베이별 최소 전단력 (`bay_min_shear`):**\n")
    write(f, "  - *설명:* 각 베이의 최소 전단력 (톤 단위).\n")
    write(f, "  - *값:* `$(instance.bay_min_shear)`\n\n")
    write(f, "- **베이별 최대 전단력 (`bay_max_shear`):**\n")
    write(f, "  - *설명:* 각 베이의 최대 전단력 (톤 단위).\n")
    write(f, "  - *값:* `$(instance.bay_max_shear)`\n\n")
    write(f, "- **베이별 최대 굽힘 모멘트 (`bay_max_bending`):**\n")
    write(f, "  - *설명:* 각 베이의 최대 굽힘 모멘트 (톤/미터 단위).\n")
    write(f, "  - *값:* `$(instance.bay_max_bending)`\n\n")

    write(f, "## 선박 데이터\n\n")
    write(f, "- **배수량 (`displacement`):**\n")
    write(f, "  - *설명:* 마지막 항구를 제외한 각 항구에서의 총 선박 배수량 (톤 단위).\n")
    write(f, "  - *값:* `$(instance.displacement)`\n\n")
    write(f, "- **최소 세로 중심 (`ship_min_lcg`):**\n")
    write(f, "  - *설명:* 마지막 항구를 제외한 각 항구에서 선박의 최소 세로 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.ship_min_lcg)`\n\n")
    write(f, "- **최대 세로 중심 (`ship_max_lcg`):**\n")
    write(f, "  - *설명:* 마지막 항구를 제외한 각 항구에서 선박의 최대 세로 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.ship_max_lcg)`\n\n")
    write(f, "- **최대 수직 중심 (`ship_max_vcg`):**\n")
    write(f, "  - *설명:* 마지막 항구를 제외한 각 항구에서 선박의 최대 수직 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.ship_max_vcg)`\n\n")
    write(f, "- **최소 가로 중심 (`ship_min_tcg`):**\n")
    write(f, "  - *설명:* 마지막 항구를 제외한 각 항구에서 선박의 최소 가로 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.ship_min_tcg)`\n\n")
    write(f, "- **최대 가로 중심 (`ship_max_tcg`):**\n")
    write(f, "  - *설명:* 마지막 항구를 제외한 각 항구에서 선박의 최대 가로 방향 무게 중심 (미터 단위).\n")
    write(f, "  - *값:* `$(instance.ship_max_tcg)`\n\n")

    write(f, "## 컨테이너 데이터\n\n")
    write(f, "- **컨테이너 유형 (`container_types`):**\n")
    write(f, "  - *설명:* 인스턴스에 사용된 컨테이너 유형 목록. 각 유형은 길이(피트), 무게(톤), 화물 유형(DC, HC, RC, HR)을 가집니다.\n")
    write(f, "  - *값:* `$(instance.container_types)`\n\n")
    write(f, "- **구간별 컨테이너 (`containers`):**\n")
    write(f, "  - *설명:* 키가 (선적항, 양하항) 튜플이고 값이 각 유형별 컨테이너 수 목록인 딕셔너리.\n")
    write(f, "  - *값:* `$(instance.containers)`\n\n")
    write(f, "- **선상 컨테이너 (릴리스) (`release`):**\n")
    write(f, "  - *설명:* 시작 시점에 이미 선상에 있는 컨테이너. [양하항, 위치, 컨테이너 유형]으로 인덱싱됩니다.\n")
    write(f, "  - *값:* `$(instance.release)`\n\n")
end

println("Successfully created instance_explanation_ko.md")
