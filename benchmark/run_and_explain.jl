

# Include the instance reader code
include("instance_reader.jl")

# Define the instance file to use as an example
instance_file = "Instances/L_5_0_60_1.txt"

# Read the instance data
instance = read_master_planning_instance(instance_file)

# Open a markdown file to write the output
open("instance_explanation.md", "w") do f
    write(f, "# Instance Data Explanation for: $(instance_file)\n\n")
    write(f, "This document explains the data loaded from the specified instance file, according to `instance_reader.jl` and `README.md`.\n\n")

    write(f, "## General Information\n\n")
    write(f, "- **Number of Bays (`n_bays`):** $(instance.n_bays)\n")
    write(f, "  - *Description:* The number of bays in the vessel.\n")
    write(f, "- **Number of Ports (`n_ports`):** $(instance.n_ports)\n")
    write(f, "  - *Description:* The number of port visits.\n")
    write(f, "- **Number of Locations/Blocks (`n_locations`):** $(instance.n_locations)\n")
    write(f, "  - *Description:* The number of locations/blocks in the vessel.\n\n")

    write(f, "## Location/Block Data\n\n")
    write(f, "- **On-deck Locations (`locations_over`):**\n")
    write(f, "  - *Description:* A list of all on-deck location IDs.\n")
    write(f, "  - *Value:* `$(instance.locations_over)`\n\n")
    write(f, "- **Below-deck Locations (`locations_under`):**\n")
    write(f, "  - *Description:* For each location, this indicates the corresponding location below-deck. A value of 0 means the location itself is below-deck.\n")
    write(f, "  - *Value:* `$(instance.locations_under)`\n\n")
    write(f, "- **On-deck Locations per Bay (`locations_over_in_bay`):**\n")
    write(f, "  - *Description:* A list for each bay, containing the on-deck locations within that bay.\n")
    write(f, "  - *Value:* `$(instance.locations_over_in_bay)`\n\n")
    write(f, "- **Bay per Location (`location_bay`):**\n")
    write(f, "  - *Description:* For each location, this indicates the bay it belongs to.\n")
    write(f, "  - *Value:* `$(instance.location_bay)`\n\n")
    write(f, "- **TEU Capacity per Location (`location_TEU_capacity`):**\n")
    write(f, "  - *Description:* The TEU (Twenty-foot Equivalent Unit) capacity of each location.\n")
    write(f, "  - *Value:* `$(instance.location_TEU_capacity)`\n\n")
    write(f, "- **FEU Capacity per Location (`location_FEU_capacity`):**\n")
    write(f, "  - *Description:* The FEU (Forty-foot Equivalent Unit) capacity of each location.\n")
    write(f, "  - *Value:* `$(instance.location_FEU_capacity)`\n\n")
    write(f, "- **Reefer Capacity per Location (`location_reefer_capacity`):**\n")
    write(f, "  - *Description:* The number of reefer plugs in each location.\n")
    write(f, "  - *Value:* `$(instance.location_reefer_capacity)`\n\n")
    write(f, "- **Weight Capacity per Location (`location_weight_capacity`):**\n")
    write(f, "  - *Description:* The weight capacity (in tons) of each location.\n")
    write(f, "  - *Value:* `$(instance.location_weight_capacity)`\n\n")
    write(f, "- **Longitudinal Center of Gravity (LCG) per Location (`location_lcg`):**\n")
    write(f, "  - *Description:* The longitudinal center of gravity (in meters) for each location.\n")
    write(f, "  - *Value:* `$(instance.location_lcg)`\n\n")
    write(f, "- **Vertical Center of Gravity (VCG) per Location (`location_vcg`):**\n")
    write(f, "  - *Description:* The vertical center of gravity (in meters) for each location.\n")
    write(f, "  - *Value:* `$(instance.location_vcg)`\n\n")
    write(f, "- **Transversal Center of Gravity (TCG) per Location (`location_tcg`):**\n")
    write(f, "  - *Description:* The transversal center of gravity (in meters) for each location.\n")
    write(f, "  - *Value:* `$(instance.location_tcg)`\n\n")

    write(f, "## Bay Data\n\n")
    write(f, "- **Buoyancy per Bay (`bay_buoyancy`):**\n")
    write(f, "  - *Description:* Buoyancy (in tons) at each bay for each port visit (excluding the last).\n")
    write(f, "  - *Value:* `$(instance.bay_buoyancy)`\n\n")
    write(f, "- **Adjacent Bays (`bay_bins`):**\n")
    write(f, "  - *Description:* Sets of adjacent bays.\n")
    write(f, "  - *Value:* `$(instance.bay_bins)`\n\n")
    write(f, "- **Lightship Weight per Bay (`bay_lightship_weight`):**\n")
    write(f, "  - *Description:* The constant weight (lightship) of each bay in tons.\n")
    write(f, "  - *Value:* `$(instance.bay_lightship_weight)`\n\n")
    write(f, "- **LCG per Bay (`bay_lcg`):**\n")
    write(f, "  - *Description:* The longitudinal center of gravity (in meters) for each bay.\n")
    write(f, "  - *Value:* `$(instance.bay_lcg)`\n\n")
    write(f, "- **VCG per Bay (`bay_vcg`):**\n")
    write(f, "  - *Description:* The vertical center of gravity (in meters) for each bay.\n")
    write(f, "  - *Value:* `$(instance.bay_vcg)`\n\n")
    write(f, "- **TCG per Bay (`bay_tcg`):**\n")
    write(f, "  - *Description:* The transversal center of gravity (in meters) for each bay.\n")
    write(f, "  - *Value:* `$(instance.bay_tcg)`\n\n")
    write(f, "- **Min Shear per Bay (`bay_min_shear`):**\n")
    write(f, "  - *Description:* The minimum shear force (in tons) at each bay.\n")
    write(f, "  - *Value:* `$(instance.bay_min_shear)`\n\n")
    write(f, "- **Max Shear per Bay (`bay_max_shear`):**\n")
    write(f, "  - *Description:* The maximum shear force (in tons) at each bay.\n")
    write(f, "  - *Value:* `$(instance.bay_max_shear)`\n\n")
    write(f, "- **Max Bending per Bay (`bay_max_bending`):**\n")
    write(f, "  - *Description:* The maximum bending moment (in tons/meter) at each bay.\n")
    write(f, "  - *Value:* `$(instance.bay_max_bending)`\n\n")

    write(f, "## Ship Data\n\n")
    write(f, "- **Displacement (`displacement`):**\n")
    write(f, "  - *Description:* The total vessel displacement (in tons) at each port (excluding the last).\n")
    write(f, "  - *Value:* `$(instance.displacement)`\n\n")
    write(f, "- **Min LCG (`ship_min_lcg`):**\n")
    write(f, "  - *Description:* The vessel's minimum longitudinal center of gravity (in meters) at each port (excluding the last).\n")
    write(f, "  - *Value:* `$(instance.ship_min_lcg)`\n\n")
    write(f, "- **Max LCG (`ship_max_lcg`):**\n")
    write(f, "  - *Description:* The vessel's maximum longitudinal center of gravity (in meters) at each port (excluding the last).\n")
    write(f, "  - *Value:* `$(instance.ship_max_lcg)`\n\n")
    write(f, "- **Max VCG (`ship_max_vcg`):\n")
    write(f, "  - *Description:* The vessel's maximum vertical center of gravity (in meters) at each port (excluding the last).\n")
    write(f, "  - *Value:* `$(instance.ship_max_vcg)`\n\n")
    write(f, "- **Min TCG (`ship_min_tcg`):**\n")
    write(f, "  - *Description:* The vessel's minimum transversal center of gravity (in meters) at each port (excluding the last).\n")
    write(f, "  - *Value:* `$(instance.ship_min_tcg)`\n\n")
    write(f, "- **Max TCG (`ship_max_tcg`):**\n")
    write(f, "  - *Description:* The vessel's maximum transversal center of gravity (in meters) at each port (excluding the last).\n")
    write(f, "  - *Value:* `$(instance.ship_max_tcg)`\n\n")

    write(f, "## Container Data\n\n")
    write(f, "- **Container Types (`container_types`):**\n")
    write(f, "  - *Description:* A list of container types used in the instance. Each type has length (ft), weight (tons), and cargo type (DC, HC, RC, HR).\n")
    write(f, "  - *Value:* `$(instance.container_types)`\n\n")
    write(f, "- **Containers per Leg (`containers`):**\n")
    write(f, "  - *Description:* A dictionary where keys are (load_port, discharge_port) tuples and values are lists of container counts for each type.\n")
    write(f, "  - *Value:* `$(instance.containers)`\n\n")
    write(f, "- **Onboard Containers (Release) (`release`):**\n")
    write(f, "  - *Description:* Containers already on board at the start. Indexed by [discharge_port, location, container_type].\n")
    write(f, "  - *Value:* `$(instance.release)`\n\n")
end

println("Successfully created instance_explanation.md")
